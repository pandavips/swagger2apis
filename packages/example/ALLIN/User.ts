/* eslint-disable */
// @ts-nocheck

/**
 * !The content of the file generated by the template content, if necessary, please refer to the use of custom templates:https://www.npmjs.com/package/swagger2apis#%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E6%9D%BF
 *
 */
import { adaptorFn } from './request.ts';
/**
 * @description: user: Thiscanonlybedonebytheloggedinuser.
 */
export const User_POST = (parameter: ALLIN.IUser = {} as any, ...args: any): Promise<ApiResponseWrapper<any>> => {
  return adaptorFn(
    {
      url: `/user`,
      method: "POST",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "user: Thiscanonlybedonebytheloggedinuser.",
        apiName: "User_POST",
        path: `/user`,
        method: `POST`,
      },
    },
    ...args,
  );
};

/**
 * @description: user: Createslistofuserswithgiveninputarray
 */
export const User_CreateWithArray_POST = (parameter: ALLIN.IUser[] = {} as any, ...args: any): Promise<ApiResponseWrapper<any>> => {
  return adaptorFn(
    {
      url: `/user/createWithArray`,
      method: "POST",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "user: Createslistofuserswithgiveninputarray",
        apiName: "User_CreateWithArray_POST",
        path: `/user/createWithArray`,
        method: `POST`,
      },
    },
    ...args,
  );
};

/**
 * @description: user: Createslistofuserswithgiveninputarray
 */
export const User_CreateWithList_POST = (parameter: ALLIN.IUser[] = {} as any, ...args: any): Promise<ApiResponseWrapper<any>> => {
  return adaptorFn(
    {
      url: `/user/createWithList`,
      method: "POST",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "user: Createslistofuserswithgiveninputarray",
        apiName: "User_CreateWithList_POST",
        path: `/user/createWithList`,
        method: `POST`,
      },
    },
    ...args,
  );
};

/**
 * @description: user: Logsuserintothesystem
 */
export const User_Login_GET = (...args: any): Promise<ApiResponseWrapper<string>> => {
  return adaptorFn(
    {
      url: `/user/login`,
      method: "GET",
      bonusInfo: {
        namespace: "ALLIN",
        description: "user: Logsuserintothesystem",
        apiName: "User_Login_GET",
        path: `/user/login`,
        method: `GET`,
      },
    },
    ...args,
  );
};

/**
 * @description: user: Logsoutcurrentloggedinusersession
 */
export const User_Logout_GET = (...args: any): Promise<ApiResponseWrapper<any>> => {
  return adaptorFn(
    {
      url: `/user/logout`,
      method: "GET",
      bonusInfo: {
        namespace: "ALLIN",
        description: "user: Logsoutcurrentloggedinusersession",
        apiName: "User_Logout_GET",
        path: `/user/logout`,
        method: `GET`,
      },
    },
    ...args,
  );
};

/**
 * @description: user: Getuserbyusername
 */
export const User_Username_$PATH$_GET = (parameter: string = "", ...args: any): Promise<ApiResponseWrapper<ALLIN.IUser>> => {
  return adaptorFn(
    {
      url: `/user/${parameter}`,
      method: "GET",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "user: Getuserbyusername",
        apiName: "User_Username_$PATH$_GET",
        path: `/user/${parameter}`,
        method: `GET`,
      },
    },
    ...args,
  );
};

/**
 * @description: user: Thiscanonlybedonebytheloggedinuser.
 */
export const User_Username_$PATH$_PUT = (parameter: string = "", ...args: any): Promise<ApiResponseWrapper<any>> => {
  return adaptorFn(
    {
      url: `/user/${parameter}`,
      method: "PUT",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "user: Thiscanonlybedonebytheloggedinuser.",
        apiName: "User_Username_$PATH$_PUT",
        path: `/user/${parameter}`,
        method: `PUT`,
      },
    },
    ...args,
  );
};

/**
 * @description: user: Thiscanonlybedonebytheloggedinuser.
 */
export const User_Username_$PATH$_DELETE = (parameter: string = "", ...args: any): Promise<ApiResponseWrapper<any>> => {
  return adaptorFn(
    {
      url: `/user/${parameter}`,
      method: "DELETE",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "user: Thiscanonlybedonebytheloggedinuser.",
        apiName: "User_Username_$PATH$_DELETE",
        path: `/user/${parameter}`,
        method: `DELETE`,
      },
    },
    ...args,
  );
};
