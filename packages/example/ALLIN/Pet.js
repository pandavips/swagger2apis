/* eslint-disable */
// @ts-nocheck
/**
 * !The content of the file generated by the template content, if necessary, please refer to the use of custom templates:https://www.npmjs.com/package/swagger2apis#%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E6%9D%BF
 *
 */
import { adaptorFn } from "./request.ts";
/**
 * @description: pet: Addanewpettothestore
 */
export const Pet_POST = (parameter = {}, ...args) => {
  return adaptorFn(
    {
      url: `/pet`,
      method: "POST",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "pet: Addanewpettothestore",
        apiName: "Pet_POST",
        path: `/pet`,
        method: `POST`,
      },
    },
    ...args,
  );
};
/**
 * @description: pet: Updateanexistingpet
 */
export const Pet_PUT = (parameter = {}, ...args) => {
  return adaptorFn(
    {
      url: `/pet`,
      method: "PUT",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "pet: Updateanexistingpet",
        apiName: "Pet_PUT",
        path: `/pet`,
        method: `PUT`,
      },
    },
    ...args,
  );
};
/**
 * @description: pet: Multiplestatusvaluescanbeprovidedwithcommaseparatedstrings
 */
export const Pet_FindByStatus_GET = (...args) => {
  return adaptorFn(
    {
      url: `/pet/findByStatus`,
      method: "GET",
      bonusInfo: {
        namespace: "ALLIN",
        description: "pet: Multiplestatusvaluescanbeprovidedwithcommaseparatedstrings",
        apiName: "Pet_FindByStatus_GET",
        path: `/pet/findByStatus`,
        method: `GET`,
      },
    },
    ...args,
  );
};
/**
 * @description: pet: Mulipletagscanbeprovidedwithcommaseparatedstrings.Usetag1,tag2,tag3fortesting.
 */
export const Pet_FindByTags_GET = (...args) => {
  return adaptorFn(
    {
      url: `/pet/findByTags`,
      method: "GET",
      bonusInfo: {
        namespace: "ALLIN",
        description: "pet: Mulipletagscanbeprovidedwithcommaseparatedstrings.Usetag1,tag2,tag3fortesting.",
        apiName: "Pet_FindByTags_GET",
        path: `/pet/findByTags`,
        method: `GET`,
      },
    },
    ...args,
  );
};
/**
 * @description: pet: Returnsasinglepet
 */
export const Pet_PetId_$PATH$_GET = (parameter = "", ...args) => {
  return adaptorFn(
    {
      url: `/pet/${parameter}`,
      method: "GET",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "pet: Returnsasinglepet",
        apiName: "Pet_PetId_$PATH$_GET",
        path: `/pet/${parameter}`,
        method: `GET`,
      },
    },
    ...args,
  );
};
/**
 * @description: pet: Updatesapetinthestorewithformdata
 */
export const Pet_PetId_$PATH$_POST = (parameter = "", ...args) => {
  return adaptorFn(
    {
      url: `/pet/${parameter}`,
      method: "POST",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "pet: Updatesapetinthestorewithformdata",
        apiName: "Pet_PetId_$PATH$_POST",
        path: `/pet/${parameter}`,
        method: `POST`,
      },
    },
    ...args,
  );
};
/**
 * @description: pet: Deletesapet
 */
export const Pet_PetId_$PATH$_DELETE = (parameter = "", ...args) => {
  return adaptorFn(
    {
      url: `/pet/${parameter}`,
      method: "DELETE",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "pet: Deletesapet",
        apiName: "Pet_PetId_$PATH$_DELETE",
        path: `/pet/${parameter}`,
        method: `DELETE`,
      },
    },
    ...args,
  );
};
/**
 * @description: pet: uploadsanimage
 */
export const Pet_PetId_UploadImage_$PATH$_POST = (parameter = "", ...args) => {
  return adaptorFn(
    {
      url: `/pet/${parameter}/uploadImage`,
      method: "POST",
      parameter,
      bonusInfo: {
        namespace: "ALLIN",
        description: "pet: uploadsanimage",
        apiName: "Pet_PetId_UploadImage_$PATH$_POST",
        path: `/pet/${parameter}/uploadImage`,
        method: `POST`,
      },
    },
    ...args,
  );
};
